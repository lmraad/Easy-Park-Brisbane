const fs = require('fs')
const db = require('sqlite-sync')

db.connect('parking.db')

db.run(`
CREATE TABLE MOBILE_ZONES (
    ZONE INTEGER PRIMARY KEY,
    TAR_RATE_WEEKDAY DECIMAL(3,2),
    TAR_RATE_AH_WE DECIMAL(3,2),
    MC_RATE DECIMAL(3,2)
);

CREATE TABLE METERS (
    METER_NO INTEGER PRIMARY KEY,
    CATEGORY VARCHAR(64),
    STREET VARCHAR(128),
    SUBURB VARCHAR(128),
    MAX_STAY_HRS INTEGER,
    RESTRICTIONS VARCHAR(128),
    FREE_MINS INTEGER,
    LOC_DESC VARCHAR(256),
    VEH_BAYS INTEGER,
    MC_BAYS INTEGER,
    LONGITUDE DECIMAL(3,6),
    LATITUDE DECIMAL(3,6),
    MOBILE_ZONE INTEGER,
    MAX_CAP_CHG DECIMAL(3,2),
    FOREIGN KEY (MOBILE_ZONE) REFERENCES MOBILE_ZONES(ZONE)
);

CREATE TABLE LOADING_ZONES (
    ID INTEGER PRIMARY KEY AUTOINCREMENT,
    LONGITUDE DECIMAL(3,6),
    LATITUDE DECIMAL(3,6),
    STREET VARCHAR(128),
    SUBURB VARCHAR(128),
    RESTRICTIONS VARCHAR(256),
    RESTRICTED_DAYS_AND_TIMES VARCHAR(256)
);

CREATE TABLE PREDICTIONS (
    ID INTEGER PRIMARY KEY AUTOINCREMENT,
    MOBILE_ZONE INTEGER,
    DATE DATE,
    HOUR INTEGER,
    OCCUPANCY_PRED INTEGER,
    FOREIGN KEY (MOBILE_ZONE) REFERENCES MOBILE_ZONES(ZONE)
);

CREATE TABLE TIMES (
    ID INTEGER PRIMARY KEY AUTOINCREMENT,
    DAYS VARCHAR(16),
    TIMES VARCHAR(16),
    START INTEGER,
    END INTEGER
);

CREATE TABLE METER_TIMES (
    METER_NO INTEGER,
    TIME_ID INTEGER,
    PRIMARY KEY (METER_NO, TIME_ID),
    FOREIGN KEY (METER_NO) REFERENCES METERS(METER_NO),
    FOREIGN KEY (TIME_ID) REFERENCES TIMES(ID)
);

SAVE parking.db
`)